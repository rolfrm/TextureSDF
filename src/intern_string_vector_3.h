// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _intern_string_vector_3{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u256 * k1, const u256 * k2);
  const size_t sizes[2];

  u256 * key;
  u32 * value;
  icy_mem * key_area;
  icy_mem * value_area;
}intern_string_vector_3;

intern_string_vector_3 * intern_string_vector_3_create(const char * optional_name);
void intern_string_vector_3_set(intern_string_vector_3 * table, u256 key, u32 value);
void intern_string_vector_3_insert(intern_string_vector_3 * table, u256 * key, u32 * value, size_t count);
void intern_string_vector_3_lookup(intern_string_vector_3 * table, u256 * keys, size_t * out_indexes, size_t count);
void intern_string_vector_3_remove(intern_string_vector_3 * table, u256 * keys, size_t key_count);
void intern_string_vector_3_clear(intern_string_vector_3 * table);
void intern_string_vector_3_unset(intern_string_vector_3 * table, u256 key);
bool intern_string_vector_3_try_get(intern_string_vector_3 * table, u256 * key, u32 * value);
void intern_string_vector_3_print(intern_string_vector_3 * table);
size_t intern_string_vector_3_iter(intern_string_vector_3 * table, u256 * keys, size_t keycnt, u256 * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
